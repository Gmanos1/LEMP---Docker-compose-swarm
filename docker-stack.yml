version: "3"
services:
  phpfmp:
    image: lemp_phpfmp_serwer
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      backend:
        aliases:
          - phpfmp_serwer
    volumes:
      - "./www:/www"
      - "logs:/var/log/php7"
    
  nginx:
    image: lemp_nginx_serwer
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - 80:80
    networks:
      backend:
        aliases:
          - nginx_serwer
    depends_on:
      - phpfmp_serwer
    volumes:
      - "./www:/www"
      - "logs:/var/log/nginx"
  
  mysql:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: my_secret_password
      MYSQL_DATABASE: app_db
      MYSQL_USER: db_user
      MYSQL_PASSWORD: db_user_pass
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
    networks:
      backend:
        aliases:
          - mysql_serwer
      frontend:
    volumes:
      - dbdata:/var/lib/mysql
  
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - backend
    environment:
      PMA_HOST: mysql_serwer
      PMA_PORT: 3306
    ports:
      - 6001:80

  visualizer:
      image: dockersamples/visualizer:stable
      ports:
        - "8080:8080"
      stop_grace_period: 1m30s
      volumes:
        - "/var/run/docker.sock:/var/run/docker.sock"
      deploy:
        placement:
          constraints: [node.role == manager]
networks:
  backend:
  frontend:

volumes:
  logs:
  dbdata:
